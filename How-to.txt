Set up for tmux
// This line allows you to quit tmux and iex as the same time
//(we only levergae tmux to use iex nothing more Tmux as tmux currently breaks wrap)
bind-key -n F10 send-keys C-\\ \; detach-client
// Scroll in tmux
set -g mouse on
// Call the iex-history.sh script in the project to call fzf and get the history of the iex
bind-key C-r run-shell "zsh ~/.iex-history/iex-history.sh #{session_name} #{window_id} #D #{pane_current_command}"


// Set up for Zsh
// Add the following to the .zshrc file
// This adds the project directory to the path
export PATH="/Users/ar/.iex-history:$PATH"
// this function allow you to open tmux and iex in a single command
// it will open run iex -S mix phx.server if the project is a phoenix project
// otherwise it will open iex only
function run_iex() {
  local command='iex'

  # Determine the current directory
  local current_dir="$(pwd)"

  # Check if mix.exs exists and contains ":phoenix"
  if [[ -f mix.exs ]] && grep -q ":phoenix" mix.exs; then
    command="iex -S mix phx.server"
  fi

  # Determine if the session exists
  if tmux has-session -t iex_session 2>/dev/null; then
    # Send 'cd' to the current directory and clear the screen
    tmux send-keys -t iex_session "cd ${current_dir}" C-m \; send-keys -t iex_session "clear" C-m
    # Then send the command
    tmux send-keys -t iex_session "$command" C-m
    # Check if we are already inside a tmux session
    if [ -z "$TMUX" ]; then
      tmux attach-session -t iex_session
    else
      echo "Already in a tmux session. Switching to 'iex_session'..."
    fi
  else
    # Create a new session with the current directory and run the command
    tmux new-session -d -s iex_session -c "$current_dir"
    tmux send-keys -t iex_session "$command" C-m
    if [ -z "$TMUX" ]; then
      tmux attach -t iex_session
    fi
  fi
}
